// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('verifier');
const proofData = require("../proofs/proof2_4.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps   
// Test verification with incorrect proof

contract('verifier', _ => {
  describe('test verifier zokrates contract', function() {
    beforeEach(async function () {
      this.contract = await Verifier.new();
    })

    it('verification with correct proof', async function () {
      let result = await this.contract.verifyTx.call(
        proofData.proof,
        proofData.inputs
      );
      assert.equal(result, true, "For correct proof it must return true")
    })

    it('verification with incorrect proof', async function () {
      let result = await this.contract.verifyTx.call(
        proofData.proof,
        ["0x0000000000000000000000000000000000000000000000000000000000000011"]
      );
      assert.equal(result, false, "For correct proof it must return false");
    })
  })
})
